"use client";
import {
  FormGroup_default
} from "./chunk-6GFUC55L.js";
import {
  RadioGroupContext_default,
  useRadioGroup
} from "./chunk-JYFU36GY.js";
import "./chunk-PR6ZCO7G.js";
import "./chunk-IMHLXMYC.js";
import {
  useId_default
} from "./chunk-64UBG5CE.js";
import {
  useControlled_default
} from "./chunk-PO53NA4F.js";
import {
  useForkRef_default
} from "./chunk-GSYFX65M.js";
import "./chunk-SSE5M33Y.js";
import "./chunk-ZTZVQIZG.js";
import "./chunk-V7FQZG4P.js";
import "./chunk-K4IO5TXF.js";
import {
  clsx_default
} from "./chunk-W5JCE42I.js";
import {
  _objectWithoutPropertiesLoose
} from "./chunk-3G26XHAY.js";
import {
  composeClasses,
  generateUtilityClass,
  generateUtilityClasses
} from "./chunk-4KHRIBLH.js";
import "./chunk-ZJ7QZZ4C.js";
import "./chunk-JWNRVAI5.js";
import {
  _extends,
  init_extends
} from "./chunk-QZVMM6GT.js";
import "./chunk-ABXIJT5V.js";
import {
  require_jsx_runtime
} from "./chunk-CRNJR6QK.js";
import {
  require_prop_types
} from "./chunk-QPMONSC4.js";
import "./chunk-ZTSFISXN.js";
import {
  require_react
} from "./chunk-ZMLY2J2T.js";
import {
  __toESM
} from "./chunk-4B2QHNJT.js";

// node_modules/@mui/material/RadioGroup/RadioGroup.js
init_extends();
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/@mui/material/RadioGroup/radioGroupClasses.js
function getRadioGroupUtilityClass(slot) {
  return generateUtilityClass("MuiRadioGroup", slot);
}
var radioGroupClasses = generateUtilityClasses("MuiRadioGroup", ["root", "row", "error"]);
var radioGroupClasses_default = radioGroupClasses;

// node_modules/@mui/material/RadioGroup/RadioGroup.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var _excluded = ["actions", "children", "className", "defaultValue", "name", "onChange", "value"];
var useUtilityClasses = (props) => {
  const {
    classes,
    row,
    error
  } = props;
  const slots = {
    root: ["root", row && "row", error && "error"]
  };
  return composeClasses(slots, getRadioGroupUtilityClass, classes);
};
var RadioGroup = React.forwardRef(function RadioGroup2(props, ref) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions,
    children,
    className,
    defaultValue,
    name: nameProp,
    onChange,
    value: valueProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const rootRef = React.useRef(null);
  const classes = useUtilityClasses(props);
  const [value, setValueState] = useControlled_default({
    controlled: valueProp,
    default: defaultValue,
    name: "RadioGroup"
  });
  React.useImperativeHandle(actions, () => ({
    focus: () => {
      let input = rootRef.current.querySelector("input:not(:disabled):checked");
      if (!input) {
        input = rootRef.current.querySelector("input:not(:disabled)");
      }
      if (input) {
        input.focus();
      }
    }
  }), []);
  const handleRef = useForkRef_default(ref, rootRef);
  const name = useId_default(nameProp);
  const contextValue = React.useMemo(() => ({
    name,
    onChange(event) {
      setValueState(event.target.value);
      if (onChange) {
        onChange(event, event.target.value);
      }
    },
    value
  }), [name, onChange, setValueState, value]);
  return (0, import_jsx_runtime.jsx)(RadioGroupContext_default.Provider, {
    value: contextValue,
    children: (0, import_jsx_runtime.jsx)(FormGroup_default, _extends({
      role: "radiogroup",
      ref: handleRef,
      className: clsx_default(classes.root, className)
    }, other, {
      children
    }))
  });
});
true ? RadioGroup.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: import_prop_types.default.node,
  /**
   * @ignore
   */
  className: import_prop_types.default.string,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types.default.any,
  /**
   * The name used to reference the value of the control.
   * If you don't provide this prop, it falls back to a randomly generated name.
   */
  name: import_prop_types.default.string,
  /**
   * Callback fired when a radio button is selected.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {string} value The value of the selected radio button.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types.default.func,
  /**
   * Value of the selected radio button. The DOM API casts this to a string.
   */
  value: import_prop_types.default.any
} : void 0;
var RadioGroup_default = RadioGroup;
export {
  RadioGroup_default as default,
  getRadioGroupUtilityClass,
  radioGroupClasses_default as radioGroupClasses,
  useRadioGroup
};
//# sourceMappingURL=@mui_material_RadioGroup.js.map
